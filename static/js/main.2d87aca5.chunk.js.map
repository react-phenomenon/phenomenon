{"version":3,"sources":["themes/storm/assets/background-blurred.jpg","themes/storm/assets/background.jpg","themes/storm/assets/logo.png","lib/Config.ts","lib/Timeline.ts","hooks/useKeyPress.ts","components/Controls/Controls.tsx","components/Deck/Deck.tsx","components/SubSteps/SubSteps.tsx","hooks/useStep.tsx","components/Slide/Slide.tsx","themes/storm/Logo.tsx","themes/storm/Texts.tsx","themes/storm/index.ts","hooks/useElementSize.tsx","components/Expand/Expand.tsx","components/Console/Console.tsx","components/Console/Cmd.tsx","helpers/stripIndent.ts","components/Console/Output.tsx","app/ConsoleExample.tsx","components/Fade/Fade.tsx","helpers/stringReplace.ts","helpers/highlightCode.tsx","components/Code/lib/appendFragments.tsx","components/Code/lib/findFragments.tsx","components/Code/partials/extensions.ts","components/Code/partials/Tab.tsx","components/Code/Code.tsx","components/Code/Comment.tsx","app/config.ts","components/Code/Frag.tsx","components/Code/Mark.tsx","app/CssExample.tsx","app/FullExample.tsx","app/HowToUse.tsx","app/JavaScriptExample.tsx","app/ReactExample.tsx","serviceWorker.ts","index.tsx","app/App.tsx"],"names":["module","exports","ConfigContext","createContext","STEP_ADD_DEBOUNCE","TimelineContext","Timeline","steps","line","onRegisterCB","onUpdateCB","addStepDone","debounce","this","createLine","handleUpdate","currentTime","getCurrentTime","saveLastTime","getDuration","time","localStorage","setItem","toString","addStep","step","push","onRegister","cb","onUpdate","seek","seconds","pause","seekByPercent","percent","pos","duration","next","isActive","play","back","reverse","getLastTime","lastTime","getItem","Number","parseFloat","console","warn","TimelineMax","paused","sort","sortSteps","forEach","index","addToLine","eventCallback","id","createStepTimeline","options","stepTimeline","_duration","prevDuration","getSameStepOffset","animateWithNext","offset","Math","min","Infinity","removePause","add","addPause","prevStep","isSameStep","id1","id2","isEqual","a","b","aLen","length","bLen","minLen","n","an","norm","bn","abs","useKeyPress","targetKey","useState","keyPressed","setKeyPressed","useEffect","downHandler","event","includes","key","upHandler","window","addEventListener","removeEventListener","Controls","props","timeline","inputRef","createRef","useLocalStorage","help","toggleHelp","ref","current","s","value","nextPress","prevPress","helpPress","homePress","handleRangeEnd","preventDefault","target","blur","Container","Line","type","defaultValue","onMouseUp","onTouchEnd","onChange","e","Steps","style","position","right","bottom","textAlign","map","i","join","title","ClickableArea","onClick","left","styled","div","p","css","ol","input","WINDOW","inRenderMode","__RENDER__","Deck","children","config","useRef","rdy","setRdy","__TIMELINE","childrenArray","Children","toArray","display","Provider","backgroundColor","backgroundImage","child","SubStepsContext","SubSteps","parent","useContext","defaultOptions","ease","Power2","easeInOut","fast","normal","slow","useStep","createTween","subId","deps","undefined","every","d","Slide","filledProps","slideConfig","contentRef","backgroundRef","to","opacity","x","Background","Content","transform","Logo","src","logoSrc","alt","baseTextStyles","Title","h1","SubTitle","h2","Text","align","useElementSize","size","saveSize","rect","getBoundingClientRect","width","height","Expand","direction","horizontal","in","el","fromTo","out","Console","Scroll","Cmd","Prompt","name","span","emptyLineRegex","stripIndent","code","indent","match","minIndent","indentReg","RegExp","newCode","replace","lines","split","firstLine","lastLine","test","shift","pop","removeWhitespaceEdges","Output","Code","text","trim","pre","ConsoleExample","Fade","stringReplace","string","regexp","fn","output","storedLastIndex","lastIndex","result","exec","substring","global","mapCode","item","flat","highlight","reg","Comp","uniqueId","styles","color","ID_REGEXP","FragmentsProvider","appendFragments","fragments","elements","c","highlightCode","inline","trimRight","element","extensions","Tab","icon","Object","keys","find","endsWith","getExtensionsIcon","Icon","Name","img","filter","node","_fragment","Frag","otherProps","stripedCode","findFragments","codeWithFragments","markers","filename","Pre","Comment","Italic","prepareTextCode","backgroundColorIn","set","backgroundColorOut","Element","indentedCode","repeat","Mark","Marker","top","mark","CssExample","FullExample","HowToUse","f","JavaScriptExample","ReactExample","Boolean","location","hostname","render","mainBackgroundImage","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2d87aca5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background-blurred.998f280d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background.f19b53aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/logo.f3b1b96f.png\";","import { Config } from '../types/Config'\nimport { createContext } from 'react'\n\nexport const ConfigContext = createContext<Partial<Config>>({})\n","import { debounce, isEqual } from 'lodash'\nimport { createContext } from 'react'\nimport { ID } from '../types/ID'\nimport { TimelineMax } from 'gsap'\n\nexport interface TimelineOptions {\n    animateWithNext?: boolean\n    title?: string\n    deps?: boolean[]\n}\n\ninterface Step {\n    id: ID\n    createStepTimeline: (tl: TimelineMax) => void\n    options?: TimelineOptions\n    _duration?: number\n}\n\ntype TimelineUpdateCallback = (ms: number, duration: number) => void\n\nconst STEP_ADD_DEBOUNCE = 1000\n\nexport const TimelineContext = createContext<Timeline>({} as Timeline)\n\nexport class Timeline {\n    public steps: Step[] = []\n    private line?: TimelineMax\n    private onRegisterCB?: () => void\n    private onUpdateCB?: TimelineUpdateCallback\n\n    public addStep(step: Step) {\n        this.steps.push(step)\n        this.addStepDone()\n    }\n\n    private addStepDone = debounce(() => {\n        this.createLine()\n        this.onRegisterCB && this.onRegisterCB()\n    }, STEP_ADD_DEBOUNCE)\n\n    public onRegister(cb: () => void) {\n        this.onRegisterCB = cb\n    }\n\n    public onUpdate(cb: TimelineUpdateCallback) {\n        this.onUpdateCB = cb\n    }\n\n    public seek(seconds: number) {\n        this.pause()\n        this.line && this.line.seek(seconds)\n    }\n\n    public seekByPercent(percent: number) {\n        if (!this.line) return\n        const pos = percent * this.line.duration()\n        this.seek(pos)\n    }\n\n    public pause() {\n        this.line && this.line.pause()\n    }\n\n    public next() {\n        if (!this.line) return\n        if (this.line.isActive()) {\n            this.line.seek(this.line.time() + 1)\n        }\n        this.line.play()\n    }\n\n    public back() {\n        if (!this.line) return\n        if (this.line.isActive()) {\n            this.line.seek(this.line.time() - 1)\n        }\n        this.line.reverse()\n    }\n\n    public getDuration() {\n        return this.line && this.line.duration()\n    }\n\n    public getCurrentTime() {\n        return this.line && this.line.time()\n    }\n\n    private handleUpdate = () => {\n        if (!this.line || !this.onUpdateCB) return\n        const currentTime = this.getCurrentTime()!\n        this.saveLastTime(currentTime)\n        this.onUpdateCB(currentTime, this.getDuration()!)\n    }\n\n    private saveLastTime = debounce((time: number) => {\n        localStorage.setItem('phenomenon:last-time', time.toString())\n    }, 100)\n\n    private getLastTime() {\n        const lastTime = localStorage.getItem('phenomenon:last-time')\n        if (!lastTime) return 0\n        return Number.parseFloat(lastTime) || 0\n    }\n\n    private createLine() {\n        if (this.line) {\n            // tslint:disable-next-line: no-console\n            console.warn('[Timeline] this.line already exists!')\n        }\n\n        this.line = new TimelineMax({ paused: true })\n\n        this.steps.sort(sortSteps)\n\n        this.steps.forEach((step, index) => {\n            this.addToLine(step, index)\n        })\n\n        this.line.eventCallback('onUpdate', this.handleUpdate)\n\n        const lastTime = this.getLastTime()\n\n        if (lastTime && lastTime < this.line.duration()) {\n            this.line.seek(lastTime - 0.1).play()\n        }\n    }\n\n    private addToLine(step: Step, index: number) {\n        const { id, createStepTimeline, options = {} } = step\n\n        if (!this.line) return\n\n        const stepTimeline = new TimelineMax()\n        createStepTimeline(stepTimeline)\n\n        // Store duration in steps for \"same step\" behavior\n        const duration = stepTimeline.duration()\n        this.steps[index]._duration = duration\n\n        const prevDuration = this.getSameStepOffset(id, index)\n\n        if ((options.animateWithNext || prevDuration) && index > 0) {\n            const offset = Math.min(duration, prevDuration || Infinity)\n\n            this.line.removePause(this.line.duration())\n            this.line.add(stepTimeline, `-=${offset}`).addPause()\n            return\n        }\n\n        this.line.add(stepTimeline).addPause()\n    }\n\n    private getSameStepOffset(id: ID, index: number): number {\n        const prevStep = this.steps[index - 1]\n\n        if (!prevStep || !isSameStep(id, prevStep.id)) {\n            return 0\n        }\n\n        return prevStep._duration || 0\n    }\n}\n\nconst isSameStep = (id1: ID, id2: ID) => {\n    return isEqual(id1, id2)\n}\n\nconst sortSteps = (a: Step, b: Step) => {\n    const aLen = a.id.length\n    const bLen = b.id.length\n    const minLen = Math.min(aLen, bLen)\n    for (let n = 0; n < minLen; n++) {\n        const an = norm(a.id[n])\n        const bn = norm(b.id[n])\n        if (an < bn) return -1\n        if (an > bn) return +1\n    }\n    return aLen - bLen\n}\n\nconst norm = (a: number) => Math.abs(a) + (a < 0 ? 0.5 : 0)\n","import { useState, useEffect } from 'react'\n\nexport function useKeyPress(...targetKey: string[]) {\n    const [keyPressed, setKeyPressed] = useState(false)\n\n    useEffect(() => {\n        const downHandler = (event: KeyboardEvent) => {\n            if (targetKey.includes(event.key)) {\n                setKeyPressed(true)\n            }\n        }\n\n        const upHandler = (event: KeyboardEvent) => {\n            if (targetKey.includes(event.key)) {\n                setKeyPressed(false)\n            }\n        }\n\n        window.addEventListener('keydown', downHandler)\n        window.addEventListener('keyup', upHandler)\n\n        return () => {\n            window.removeEventListener('keydown', downHandler)\n            window.removeEventListener('keyup', upHandler)\n        }\n    }, [targetKey])\n\n    return keyPressed\n}\n","import React, { createRef, FC, useEffect } from 'react'\nimport useLocalStorage from 'react-use/lib/useLocalStorage'\nimport styled, { css } from 'styled-components'\nimport { useKeyPress } from '../../hooks/useKeyPress'\nimport { Timeline } from '../../lib/Timeline'\n\ninterface ControlsProps {\n    timeline: Timeline\n}\n\nexport const Controls: FC<ControlsProps> = props => {\n    const { timeline } = props\n    const inputRef = createRef<HTMLInputElement>()\n    const [help, toggleHelp] = useLocalStorage('help', false)\n\n    useEffect(() => {\n        const ref = inputRef.current\n        if (ref) {\n            timeline.onUpdate((s, duration) => {\n                ref.value = ((s / duration) * 100).toString()\n            })\n        }\n    }, [inputRef, timeline])\n\n    const nextPress = useKeyPress(' ', 'ArrowRight', 'd')\n    const prevPress = useKeyPress('Backspace', 'ArrowLeft', 'a')\n    const helpPress = useKeyPress('h')\n    const homePress = useKeyPress('Home', 's')\n\n    useEffect(() => {\n        if (nextPress) timeline.next()\n        if (prevPress) timeline.back()\n        if (helpPress) toggleHelp(!help)\n        if (homePress) timeline.seek(0)\n    }, [nextPress, prevPress, helpPress, homePress, timeline, toggleHelp, help])\n\n    const handleRangeEnd = (\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        event: React.MouseEvent<HTMLInputElement, MouseEvent> | any,\n    ) => {\n        event.preventDefault()\n        event.target.blur()\n        timeline.next()\n    }\n\n    return (\n        <>\n            <Container>\n                <Line\n                    ref={inputRef}\n                    type=\"range\"\n                    defaultValue=\"0\"\n                    step=\"0.001\"\n                    onMouseUp={handleRangeEnd}\n                    onTouchEnd={handleRangeEnd}\n                    onChange={e => timeline.seekByPercent(+e.target.value / 100)}\n                />\n                {help && (\n                    <Steps\n                        style={{\n                            position: 'absolute',\n                            right: 10,\n                            bottom: 40,\n                            textAlign: 'left',\n                        }}\n                    >\n                        {timeline.steps.map((step, i) => (\n                            <li key={step.id.toString() + i}>\n                                {step.id.join('.')}\n                                {step.options &&\n                                    step.options.title &&\n                                    ` - ${step.options.title}`}\n                            </li>\n                        ))}\n                    </Steps>\n                )}\n            </Container>\n\n            {/* <Pointer /> */}\n\n            <ClickableArea right onClick={() => timeline.next()} />\n            <ClickableArea left onClick={() => timeline.back()} />\n        </>\n    )\n}\n\nconst Container = styled.div`\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    z-index: 10;\n    padding: 20px;\n    text-align: center;\n`\n\nconst ClickableArea = styled.div<{ left?: boolean; right?: boolean }>`\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    width: 30vw;\n    height: 100%;\n    z-index: 9;\n    ${p =>\n        p.left &&\n        css`\n            left: 0;\n            cursor: w-resize;\n        `}\n    ${p =>\n        p.right &&\n        css`\n            right: 0;\n\n            cursor: e-resize;\n        `}\n`\n\nconst Steps = styled.ol`\n    font-size: 12px;\n    max-height: calc(100vh - 65px);\n    overflow: auto;\n    color: white;\n    font-family: monospace;\n`\n\nconst Line = styled.input`\n    width: 100%;\n    opacity: 0.5;\n    -webkit-appearance: none;\n    &:focus {\n        outline: none;\n    }\n    &::-webkit-slider-runnable-track {\n        width: 100%;\n        height: 8px;\n        cursor: pointer;\n        background: #999;\n        border-radius: 2px;\n        border: none;\n    }\n    &::-webkit-slider-thumb {\n        border: none;\n        height: 20px;\n        width: 50px;\n        border-radius: 15px;\n        background: #ffffff;\n        cursor: pointer;\n        -webkit-appearance: none;\n        margin-top: -6px;\n    }\n    &:focus::-webkit-slider-runnable-track {\n        background: #999;\n    }\n    &::-moz-range-track {\n        width: 100%;\n        height: 8px;\n        cursor: pointer;\n        background: #999;\n        border-radius: 2px;\n        border: none;\n    }\n    &::-moz-range-thumb {\n        border: none;\n        height: 20px;\n        width: 50px;\n        border-radius: 15px;\n        background: #ffffff;\n        cursor: pointer;\n    }\n    &::-ms-track {\n        width: 100%;\n        height: 8px;\n        cursor: pointer;\n        background: transparent;\n        border-color: transparent;\n        color: transparent;\n    }\n    &::-ms-fill-lower {\n        background: rgba(250, 250, 250, 0.11);\n        border: none;\n        border-radius: 2.6px;\n    }\n    &::-ms-fill-upper {\n        background: #999;\n        border: none;\n        border-radius: 2.6px;\n    }\n    &::-ms-thumb {\n        border: none;\n        height: 20px;\n        width: 50px;\n        border-radius: 15px;\n        background: #ffffff;\n        cursor: pointer;\n        height: 8px;\n    }\n    &:focus::-ms-fill-lower {\n        background: #999;\n    }\n    &:focus::-ms-fill-upper {\n        background: #999;\n    }\n`\n","import React, { FC, useEffect, useRef, useState, Children, ReactElement } from 'react'\nimport styled from 'styled-components'\nimport { ConfigContext } from '../../lib/Config'\nimport { Timeline, TimelineContext } from '../../lib/Timeline'\nimport { Config } from '../../types/Config'\nimport { Controls } from '../Controls'\nimport { SlideFilledProps } from '../Slide'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst WINDOW = window as any\nconst inRenderMode: boolean = WINDOW.__RENDER__\n\ninterface DeckProps {\n    config?: Partial<Config>\n}\n\nexport const Deck: FC<DeckProps> = props => {\n    const { children, config = {} } = props\n\n    const timelineRef = useRef(new Timeline())\n    const timeline = timelineRef.current\n\n    const [rdy, setRdy] = useState(false)\n\n    // if (inRenderMode) {\n    WINDOW.__TIMELINE = timeline\n    // }\n\n    useEffect(() => {\n        timeline.onRegister(() => {\n            setRdy(true)\n        })\n    }, [timeline])\n\n    const childrenArray = Children.toArray<ReactElement<SlideFilledProps>>(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        children as any,\n    )\n\n    return (\n        <>\n            {rdy && (\n                <>\n                    {!inRenderMode && <Controls timeline={timeline} />}\n                    {inRenderMode && (\n                        <div id=\"duration\" style={{ display: 'none' }}>\n                            {timeline.getDuration()}\n                        </div>\n                    )}\n                </>\n            )}\n            <ConfigContext.Provider value={config}>\n                <TimelineContext.Provider value={timeline}>\n                    <Container\n                        style={{\n                            backgroundColor: config.backgroundColor,\n                            backgroundImage: `url(${config.backgroundImage})`,\n                        }}\n                    >\n                        {childrenArray.map((child, index) => (\n                            <child.type key={index} index={index + 1} {...child.props} />\n                        ))}\n                    </Container>\n                </TimelineContext.Provider>\n            </ConfigContext.Provider>\n        </>\n    )\n}\n\nconst Container = styled.div`\n    height: 100%;\n`\n","import React, { FC, createContext, useContext } from 'react'\nimport { ID } from '../../types/ID'\n\nexport const SubStepsContext = createContext<ID>([])\n\ninterface SubStepsProps {\n    id: ID\n}\n\nexport const SubSteps: FC<SubStepsProps> = props => {\n    const parent = useContext(SubStepsContext)\n    return (\n        <SubStepsContext.Provider value={[...parent, ...props.id]}>\n            {props.children}\n        </SubStepsContext.Provider>\n    )\n}\n","import { Power2, TimelineMax, Ease } from 'gsap'\nimport { useContext, useEffect } from 'react'\nimport { SubStepsContext } from '../components/SubSteps'\nimport { TimelineContext, TimelineOptions } from '../lib/Timeline'\n\ninterface Durations {\n    fast: number\n    normal: number\n    slow: number\n}\n\ninterface DefaultOptions {\n    ease: Ease\n    duration: Durations\n}\n\nconst defaultOptions: DefaultOptions = {\n    ease: Power2.easeInOut,\n    duration: {\n        fast: 0.3,\n        normal: 0.4,\n        slow: 0.8,\n    },\n}\n\nexport const useStep = (\n    index?: number,\n    createTween?: (tween: TimelineMax, defaultOptions: DefaultOptions) => void,\n    options: TimelineOptions = {},\n) => {\n    const timeline = useContext(TimelineContext)\n    const subId = useContext(SubStepsContext)\n    const { deps = [] } = options\n\n    useEffect(() => {\n        if (index === undefined || !createTween || !deps.every(d => d)) return\n\n        timeline.addStep({\n            id: [...subId, index],\n            createStepTimeline: stepTimeline => createTween(stepTimeline, defaultOptions),\n            options,\n        })\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, deps)\n}\n","import React, { FC, PropsWithChildren, useContext, useRef } from 'react'\nimport styled from 'styled-components'\nimport { useStep } from '../../hooks/useStep'\nimport { ConfigContext } from '../../lib/Config'\nimport { Config } from '../../types/Config'\nimport { SubSteps } from '../SubSteps'\n\ninterface SlideProps {\n    config?: Partial<Config>\n}\n\nexport interface SlideFilledProps extends SlideProps {\n    index: number\n}\n\nexport const Slide: FC<SlideProps> = props => {\n    const filledProps = props as PropsWithChildren<SlideFilledProps>\n    const { index, children, config: slideConfig } = filledProps\n\n    const baseConfig = useContext(ConfigContext)\n    const config = { ...baseConfig, ...slideConfig }\n\n    const contentRef = useRef<HTMLDivElement>(null)\n    const backgroundRef = useRef<HTMLDivElement>(null)\n\n    useStep(\n        index,\n        (timeline, { duration, ease }) => {\n            timeline\n                .to(backgroundRef.current!, duration.slow, {\n                    opacity: 1,\n                    ease,\n                })\n                .to(\n                    contentRef.current!,\n                    duration.slow,\n                    {\n                        opacity: 1,\n                        x: 0,\n                        ease,\n                    },\n                    `-=${duration}`,\n                )\n        },\n        { title: '→Slide', animateWithNext: true },\n    )\n\n    useStep(\n        -index,\n        (timeline, { duration, ease }) => {\n            timeline\n                .to(backgroundRef.current!, duration.slow, {\n                    opacity: 0,\n                    ease,\n                })\n                .to(\n                    contentRef.current!,\n                    duration.slow,\n                    {\n                        opacity: 0,\n                        x: '-100%',\n                        ease,\n                    },\n                    `-=${duration}`,\n                )\n        },\n        { title: '←Slide' },\n    )\n\n    return (\n        <SubSteps id={[index]}>\n            <Background\n                ref={backgroundRef}\n                style={{\n                    backgroundColor: config.backgroundColor,\n                    backgroundImage: `url(${config.backgroundImage})`,\n                    opacity: 0,\n                }}\n            >\n                <Content\n                    ref={contentRef}\n                    style={{\n                        transform: 'translateX(100%)',\n                        opacity: 0,\n                    }}\n                >\n                    <div>{children}</div>\n                </Content>\n            </Background>\n        </SubSteps>\n    )\n}\n\nconst Background = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    overflow: hidden;\n    pointer-events: none;\n    background-position: center center;\n    background-size: cover;\n`\n\nconst Content = styled.div`\n    position: absolute;\n    top: 0;\n    right: 0;\n    left: 0;\n    bottom: 0;\n    margin: auto;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    pointer-events: all;\n    padding: 20px 0;\n    max-height: 100vh;\n    overflow: auto;\n`\n","import React, { FC } from 'react'\nimport logoSrc from './assets/logo.png'\n\nexport const Logo: FC = () => <img src={logoSrc} alt=\"Phenomenon\" />\n","import styled, { css } from 'styled-components'\n\nconst baseTextStyles = css`\n    line-height: 1.6;\n    font-family: 'Source Code Pro', monospace;\n`\n\nexport const Title = styled.h1`\n    ${baseTextStyles}\n    text-align: center;\n    color: #69a0d3;\n    font-size: 48px;\n`\n\nexport const SubTitle = styled.h2`\n    ${baseTextStyles}\n    color: #69a0d3;\n    font-size: 28px;\n`\n\nexport const Text = styled.p<{ align?: 'left' | 'right' | 'center' }>`\n    ${baseTextStyles}\n    font-size: 16px;\n    color: #f0f8ff;\n    ${p =>\n        p.align &&\n        css`\n            text-align: ${p.align};\n        `}\n`\n","export * from './Logo'\nexport * from './Texts'\n\nexport const backgroundColor = '#282c34'\nexport { default as backgroundImage } from './assets/background-blurred.jpg'\nexport { default as mainBackgroundImage } from './assets/background.jpg'\n","import { RefObject, useEffect, useState } from 'react'\n\nexport interface Size extends ClientRect {}\n\nexport const useElementSize = (ref: RefObject<HTMLElement>): Size | null => {\n    const [size, saveSize] = useState<ClientRect | null>(null)\n\n    useEffect(() => {\n        if (!size && ref.current) {\n            const rect = ref.current.getBoundingClientRect()\n            if (rect.width && rect.height) {\n                saveSize(rect)\n            }\n        }\n    }, [size, ref])\n\n    return size\n}\n","import React, { FC, useRef } from 'react'\nimport styled from 'styled-components'\nimport { useElementSize } from '../../hooks/useElementSize'\nimport { useStep } from '../../hooks/useStep'\nimport { StepProps } from '../../types/StepProps'\n\ninterface ExpandProps extends StepProps {\n    horizontal?: boolean\n}\n\nexport const Expand: FC<ExpandProps> = props => {\n    const direction = props.horizontal ? 'width' : 'height'\n    const ref = useRef<HTMLDivElement>(null)\n    const size = useElementSize(ref)\n\n    useStep(\n        props.in,\n        (timeline, { duration, ease }) => {\n            const el = ref.current!\n            timeline\n                .fromTo(\n                    el,\n                    duration.fast,\n                    { [direction]: 0, opacity: 0, ease },\n                    { [direction]: size![direction], ease },\n                )\n                .to(el, duration.fast, {\n                    opacity: 1,\n                    ease,\n                })\n        },\n        { title: '→Expand', deps: [size !== null] },\n    )\n\n    useStep(\n        props.out,\n        (timeline, { duration, ease }) => {\n            const el = ref.current!\n            timeline\n                .to(el, duration.fast, {\n                    opacity: 0,\n                    ease,\n                })\n                .to(el, duration.fast, {\n                    [direction]: 0,\n                    ease,\n                })\n        },\n        { title: '←Expand' },\n    )\n\n    return <Container ref={ref}>{props.children}</Container>\n}\n\nconst Container = styled.div`\n    overflow: hidden;\n`\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { StepProps } from '../../types/StepProps'\nimport { Expand } from '../Expand'\nimport { SubSteps } from '../SubSteps'\n\ninterface ConsoleProps extends StepProps {}\n\nexport const Console: FC<ConsoleProps> = props => {\n    return (\n        <Expand in={props.in} out={props.out} options={{ title: 'Console' }}>\n            <SubSteps id={[props.in || 0]}>\n                <Container>\n                    <Scroll>{props.children}</Scroll>\n                </Container>\n            </SubSteps>\n        </Expand>\n    )\n}\n\nconst Container = styled.div`\n    overflow: hidden;\n    position: relative;\n    width: 500px;\n    max-width: 100%;\n    height: 300px;\n    background-color: #20242b;\n    padding: 2em;\n    margin: 2em auto;\n    border-radius: 0.5em;\n    font-family: 'Source Code Pro', monospace;\n    font-size: 16px;\n    color: #f0f8ff;\n    line-height: 1.6;\n`\n\nconst Scroll = styled.div`\n    position: absolute;\n    left: 10px;\n    right: 10px;\n    bottom: 10px;\n`\n","import React, { FC, useRef } from 'react'\nimport styled from 'styled-components'\nimport { useElementSize } from '../../hooks/useElementSize'\nimport { useStep } from '../../hooks/useStep'\n\ninterface CmdProps {\n    name: string\n    in: number\n}\n\nexport const Cmd: FC<CmdProps> = props => {\n    const ref = useRef(null)\n    const size = useElementSize(ref)\n\n    useStep(\n        props.in,\n        (timeline, { duration, ease }) => {\n            const el = ref.current!\n            timeline\n                .fromTo(\n                    el,\n                    duration.fast,\n                    { height: 0, width: 0, opacity: 0 },\n                    { height: size!.height, ease },\n                )\n                .to(el, duration.fast, {\n                    opacity: 1,\n                    width: '100%',\n                    ease,\n                })\n        },\n        { title: 'Cmd', deps: [size !== null] },\n    )\n\n    return (\n        <Container ref={ref}>\n            <Line>\n                <Prompt>➜</Prompt>\n                {props.name}\n            </Line>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    overflow: hidden;\n    white-space: nowrap;\n`\n\nconst Line = styled.div`\n    background-color: rgba(255, 255, 255, 0.05);\n    padding: 0.2em 0.3em;\n    border-radius: 0.2em;\n    margin-top: 1em;\n`\n\nconst Prompt = styled.span`\n    color: #abc123;\n    padding-right: 0.5em;\n    font-weight: bold;\n`\n","const minIndent = (code: string) => {\n    const match = code.match(/^[ \\t]*(?=\\S)/gm)\n\n    if (!match) return 0\n\n    return Math.min(...match.map((x: string) => x.length))\n}\n\nconst emptyLineRegex = /^\\s*/\n\nconst removeWhitespaceEdges = (code: string) => {\n    const lines = code.split('\\n')\n\n    if (lines.length <= 1) {\n        return code\n    }\n\n    const firstLine = lines[0]\n    const lastLine = lines[lines.length - 1]\n\n    if (emptyLineRegex.test(firstLine)) {\n        lines.shift()\n    }\n\n    if (emptyLineRegex.test(lastLine)) {\n        lines.pop()\n    }\n\n    return lines.join('\\n')\n}\n\nexport const stripIndent = (code: string) => {\n    const indent = minIndent(code)\n\n    if (indent === 0) return code\n\n    const indentReg = new RegExp(`^[ \\\\t]{${indent}}`, 'gm')\n\n    let newCode = code.replace(indentReg, '')\n    newCode = removeWhitespaceEdges(newCode)\n\n    return newCode\n}\n","import React, { FC, useRef } from 'react'\nimport styled from 'styled-components'\nimport { stripIndent } from '../../helpers/stripIndent'\nimport { useElementSize } from '../../hooks/useElementSize'\nimport { useStep } from '../../hooks/useStep'\n\ninterface OutputProps {\n    text: string\n    in: number\n}\n\nexport const Output: FC<OutputProps> = props => {\n    const ref = useRef(null)\n    const size = useElementSize(ref)\n\n    useStep(\n        props.in,\n        (timeline, { duration, ease }) => {\n            timeline.fromTo(\n                ref.current!,\n                duration.normal,\n                { opacity: 0, height: 0 },\n                { opacity: 1, height: size!.height, ease },\n            )\n        },\n        { title: 'Output', deps: [size !== null] },\n    )\n\n    return (\n        <Container ref={ref}>\n            <Code>{stripIndent(props.text).trim()}</Code>\n        </Container>\n    )\n}\n\nconst Container = styled.div`\n    overflow: hidden;\n`\n\nconst Code = styled.pre`\n    white-space: pre-wrap;\n    padding: 0.3em;\n    margin: 0;\n`\n","import React, { FC } from 'react'\nimport { Console, Cmd, Output } from '../components/Console'\nimport { Title } from '../themes/storm'\n\nexport const ConsoleExample: FC = () => {\n    let i = 0\n    return (\n        <>\n            <Title>Console</Title>\n            <Console>\n                <Cmd in={++i} name=\"rm -rf /dev/null\" />\n                <Output\n                    in={++i}\n                    text=\"rm: cannot remove '/dev/null': No such file or directory\"\n                />\n                <Cmd in={++i} name=\"ls -l /home/root/Projects/Phenomenon\" />\n                <Output\n                    in={++i}\n                    text={`\n                    total 568\n                    root   4096 maj 28 01:19 build\n                    root  36864 cze  5 23:24 node_modules\n                    root   1661 cze  5 23:24 package.json\n                    root   4096 lut 13 15:36 public\n                    root     12 mar 16 13:23 README.md\n                `}\n                />\n                <Output\n                    in={++i}\n                    text={`\n                    root   4096 cze  3 02:07 scripts\n                    root   4096 maj 23 00:40 src\n                    root    703 cze  5 23:46 tsconfig.json\n                    root 499238 cze  5 23:24 yarn.lock\n                `}\n                />\n            </Console>\n        </>\n    )\n}\n","import React, { FC, useRef } from 'react'\nimport { useStep } from '../../hooks/useStep'\nimport { StepProps } from '../../types/StepProps'\n\ninterface TextProps extends StepProps {}\n\nexport const Fade: FC<TextProps> = props => {\n    const ref = useRef(null)\n\n    useStep(\n        props.in,\n        (timeline, { duration, ease }) => {\n            timeline.fromTo(\n                ref.current!,\n                duration.normal,\n                { opacity: 0 },\n                { opacity: 1, ease },\n            )\n        },\n        { title: '→Fade' },\n    )\n\n    useStep(\n        props.out,\n        (timeline, { duration, ease }) => {\n            timeline.to(ref.current!, duration.normal, {\n                opacity: 0,\n                ease,\n            })\n        },\n        { title: '←Fade' },\n    )\n\n    return <div ref={ref}>{props.children}</div>\n}\n","export const stringReplace = <T>(\n    string: string,\n    regexp: RegExp,\n    fn: (id: string) => T,\n) => {\n    const output = []\n\n    const storedLastIndex = regexp.lastIndex\n    regexp.lastIndex = 0\n\n    let result\n    let lastIndex = 0\n\n    while ((result = regexp.exec(string))) {\n        const index = result.index\n\n        if (result[0] === '') {\n            // When the regexp is an empty string\n            // we still want to advance our cursor to the next item.\n            // This is the behavior of String.replace.\n            regexp.lastIndex = regexp.lastIndex + 1\n        }\n\n        if (index !== lastIndex) {\n            output.push(string.substring(lastIndex, index))\n        }\n\n        const match = result[0]\n        lastIndex = index + match.length\n        const id = result[1]\n\n        const out = fn(id)\n        output.push(out)\n\n        if (!regexp.global) {\n            break\n        }\n    }\n\n    if (lastIndex < string.length) {\n        output.push(string.substring(lastIndex))\n    }\n\n    regexp.lastIndex = storedLastIndex\n\n    return output\n}\n","/* eslint-disable @typescript-eslint/no-explicit-any */ // TODO\nimport React, { FC } from 'react'\nimport { stringReplace } from './stringReplace'\nimport styled from 'styled-components'\nimport { uniqueId } from 'lodash'\n\nexport const highlightCode = (code: string | any[]) => {\n    let newCode = typeof code === 'string' ? [code] : code\n    for (const style of styles) {\n        newCode = mapCode(newCode, c => highlight(c, style.reg, style.Comp))\n    }\n    return newCode\n}\n\nconst mapCode = (code: any[], fn: (c: string) => any) =>\n    code.map(item => (typeof item === 'string' ? fn(item) : item)).flat()\n\nconst highlight = (code: string, reg: RegExp, Comp: any) =>\n    stringReplace(code, reg, key => (\n        <Comp key={uniqueId('highlight-')} value={key}>\n            {key}\n        </Comp>\n    ))\n\ninterface ColorProps {\n    value: string\n}\n\nconst Color: FC<ColorProps> = ({ value }) => <span style={{ color: value }}>{value}</span>\n\nconst styles: { reg: RegExp; Comp: any }[] = [\n    {\n        reg: /(if|else|return|for|while|of|=>)/g,\n        Comp: styled.span`\n            color: #c678dd;\n        `,\n    },\n    {\n        reg: /(#[0-9a-fA-F]{3,6})/g,\n        Comp: Color,\n    },\n    {\n        reg: /(true|false|undefined|null)/g,\n        Comp: styled.span`\n            color: #d19a66;\n        `,\n    },\n    {\n        reg: /([\"'`].+[\"'`])/g,\n        Comp: styled.span`\n            color: #98c379;\n        `,\n    },\n    {\n        reg: /(\\d+(%|px|\\.)*)/g,\n        Comp: styled.span`\n            color: #d19a66;\n        `,\n    },\n    {\n        reg: /([=!@$%^&*<>|]+)/g,\n        Comp: styled.span`\n            color: #56b6c2;\n        `,\n    },\n]\n","import { createContext } from 'react'\nimport { stringReplace } from '../../../helpers/stringReplace'\nimport { highlightCode } from '../../../helpers/highlightCode'\nimport { Fragments } from '../types/Fragments'\n\nconst ID_REGEXP = /\\n?\\$([A-Z0-9_]*)\\n?/g // $SOME\n\nexport const FragmentsProvider = createContext<Fragments>({})\n\nexport const appendFragments = (code: string, fragments: Fragments) => {\n    const elements = stringReplace(code, ID_REGEXP, id => fragments[id])\n\n    const newCode = elements.map((item, index) => {\n        const next = elements[index + 1]\n\n        // Next element has display: block so we have to remove new line\n        if (\n            typeof item === 'string' &&\n            next &&\n            typeof next === 'object' &&\n            !next.inline\n        ) {\n            return item.trimRight()\n        }\n\n        if (typeof item === 'string') {\n            return item\n        }\n\n        if (!item) return null\n\n        return item.element\n    })\n\n    return highlightCode(newCode)\n}\n","import React, { Children, ReactNode, ReactElement } from 'react'\nimport { Fragments } from '../types/Fragments'\nimport { FragProps } from '../Frag'\nimport { stripIndent } from '../../../helpers/stripIndent'\nimport { FragFC } from '../types/FragFC'\n\nexport const findFragments = (children: ReactNode): Fragments => {\n    const fragments: Fragments = {}\n\n    const fragmentNodes = Children.toArray(children).filter(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (node: any) => (node.type as FragFC<FragProps>)._fragment,\n    )\n\n    fragmentNodes.forEach((el, index) => {\n        const element = el as ReactElement<FragProps>\n        const Frag = element.type\n        const props = element.props\n\n        const { code, inline, ...otherProps } = props\n        const stripedCode = typeof code === 'string' && !inline ? stripIndent(code) : code\n\n        fragments[props.id] = {\n            element: (\n                <Frag\n                    key={props.id + index}\n                    {...otherProps}\n                    code={stripedCode}\n                    inline={inline}\n                    index={props.in}\n                />\n            ),\n            inline: !!props.inline,\n        }\n    })\n\n    return fragments\n}\n","const react = 'https://icongr.am/devicon/react-original.svg'\n\nconst extensions = {\n    '.html': 'https://icongr.am/devicon/html5-original.svg',\n    '.css': 'https://icongr.am/devicon/css3-original.svg',\n    '.js': 'https://icongr.am/devicon/javascript-original.svg',\n    '.ts': 'https://icongr.am/devicon/typescript-original.svg',\n    '.jsx': react,\n    '.tsx': react,\n    'package.json': 'https://icongr.am/devicon/npm-original-wordmark.svg',\n}\n\ntype ExtensionsKey = keyof typeof extensions\n\nexport const getExtensionsIcon = (name: string) => {\n    const key = Object.keys(extensions).find(key => name.endsWith(key))\n    if (!key) return\n    return extensions[key as ExtensionsKey]\n}\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\nimport { getExtensionsIcon } from './extensions'\n\ninterface TabProps {\n    name: string\n}\n\nexport const Tab: FC<TabProps> = props => {\n    const { name } = props\n    const icon = getExtensionsIcon(name)\n    return (\n        <Container>\n            {icon && <Icon src={icon} width={16} height={16} alt=\"\" />}\n            <Name>{name}</Name>\n        </Container>\n    )\n}\n\nconst Icon = styled.img`\n    margin-right: 0.3em;\n    display: inline-block;\n    vertical-align: middle;\n`\n\nconst Name = styled.span`\n    display: inline-block;\n    vertical-align: middle;\n`\n\nconst Container = styled.div`\n    display: inline-block;\n    padding: 0.5em 1em;\n    border-top: 2px solid lightblue;\n    background-color: #20242b;\n    border-radius: 3px;\n    position: relative;\n    top: 3px;\n`\n","import React, { Children, FC } from 'react'\nimport styled from 'styled-components'\nimport { stripIndent } from '../../helpers/stripIndent'\nimport { StepProps } from '../../types/StepProps'\nimport { Fade } from '../Fade'\nimport { SubSteps } from '../SubSteps'\nimport { appendFragments, FragmentsProvider } from './lib/appendFragments'\nimport { findFragments } from './lib/findFragments'\nimport { FragFC } from './types/FragFC'\nimport { Tab } from './partials/Tab'\n\ninterface CodeProps extends StepProps {\n    code: string\n    filename?: string\n}\n\nexport const Code: FC<CodeProps> = props => {\n    const fragments = findFragments(props.children)\n    const code = stripIndent(props.code)\n    const codeWithFragments = appendFragments(code, fragments)\n    const markers = Children.toArray(props.children).filter(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        (node: any) => !(node.type as FragFC<StepProps>)._fragment,\n    )\n\n    return (\n        <Fade in={props.in} out={props.out} options={{ title: 'Code' }}>\n            <SubSteps id={[props.in || 0]}>\n                <FragmentsProvider.Provider value={fragments}>\n                    <Container>\n                        {props.filename && <Tab name={props.filename} />}\n                        <Background>\n                            <Pre>\n                                {codeWithFragments}\n                                {markers}\n                            </Pre>\n                        </Background>\n                    </Container>\n                </FragmentsProvider.Provider>\n            </SubSteps>\n        </Fade>\n    )\n}\n\nconst Container = styled.div`\n    line-height: 1.5em;\n    font-size: 16px;\n    margin: 2em auto;\n    color: #f0f8ff;\n    font-family: 'Source Code Pro', monospace;\n`\n\nconst Background = styled.div`\n    padding: 1em 2em;\n    background-color: #20242b;\n    border-radius: 3px;\n`\n\nconst Pre = styled.pre`\n    position: relative;\n`\n","import React, { FC } from 'react'\nimport styled from 'styled-components'\n\nexport const Comment: FC = props => <Italic>// {props.children}</Italic>\n\nconst Italic = styled.span`\n    font-style: italic;\n    color: #999;\n`\n","import { Config } from '../types/Config'\n\nexport const config: Config = {\n    indent: '    ',\n}\n","import React, { ReactNode, useContext, useRef } from 'react'\nimport styled from 'styled-components'\nimport { config } from '../../app/config'\nimport { useElementSize } from '../../hooks/useElementSize'\nimport { useStep } from '../../hooks/useStep'\nimport { StepProps } from '../../types/StepProps'\nimport { appendFragments, FragmentsProvider } from './lib/appendFragments'\nimport { Fragments } from './types/Fragments'\nimport { FragFC } from './types/FragFC'\n\nexport interface FragProps extends StepProps {\n    id: string\n    code: ReactNode\n    inline?: boolean\n    indent?: number\n}\n\nexport const Frag: FragFC<FragProps> = props => {\n    const ref = useRef<HTMLDivElement>(null)\n    const size = useElementSize(ref)\n    const fragments = useContext(FragmentsProvider)\n\n    const key = props.inline ? 'width' : 'height'\n\n    const code =\n        typeof props.code === 'string'\n            ? prepareTextCode(props.code, fragments, props.indent)\n            : props.code\n\n    useStep(\n        props.in,\n        (timeline, { duration, ease }) => {\n            timeline\n                .fromTo(\n                    ref.current!,\n                    duration.normal,\n                    {\n                        [key]: 0,\n                        opacity: 0,\n                        backgroundColor: backgroundColorIn,\n                    },\n                    {\n                        [key]: size![key],\n                        opacity: 1,\n                        ease,\n                    },\n                )\n                .set(ref.current!, { [key]: 'auto' })\n                .to(ref.current!, duration.fast, {\n                    backgroundColor: backgroundColorOut,\n                })\n        },\n        { title: '→Frag', deps: [size !== null] },\n    )\n\n    useStep(\n        props.out,\n        (timeline, { duration, ease }) => {\n            timeline.to(ref.current!, duration.normal, {\n                [key]: 0,\n                opacity: 0,\n                ease,\n            })\n        },\n        { title: '←Frag' },\n    )\n\n    return (\n        <>\n            {!size && !props.inline && <div />}\n            <Element\n                key={props.id}\n                inline={props.inline}\n                ref={ref}\n                style={{ position: size ? 'relative' : 'absolute' }}\n            >\n                {code}\n            </Element>\n        </>\n    )\n}\n\n// TODO this is not the best idea\n// This will differentiate this component from the <Frag />\nFrag._fragment = true\n\nconst prepareTextCode = (code: string, fragments: Fragments, indent = 0) => {\n    const indentedCode = code\n        .split('\\n')\n        .map(line => config.indent.repeat(indent) + line)\n        .join('\\n')\n\n    return appendFragments(indentedCode, fragments)\n}\n\nconst backgroundColorIn = 'rgba(255, 255, 255, 0.4)'\nconst backgroundColorOut = 'rgba(255, 255, 255, 0.0)'\n\nconst Element = styled.code<{ inline?: boolean }>`\n    display: ${p => (p.inline ? 'inline-block' : 'block')};\n    vertical-align: top;\n    overflow: hidden;\n    border-radius: 3px;\n    box-sizing: border-box;\n    white-space: pre;\n`\n","import React, { FC, useRef } from 'react'\nimport styled from 'styled-components'\nimport { useStep } from '../../hooks/useStep'\nimport { StepProps } from '../../types/StepProps'\n\ninterface MarkProps extends StepProps {\n    line: number\n}\n\nexport const Mark: FC<MarkProps> = props => {\n    const ref = useRef<HTMLDivElement>(null)\n\n    useStep(\n        props.in,\n        (timeline, { duration, ease }) => {\n            timeline.fromTo(\n                ref.current!,\n                duration.normal,\n                { opacity: 0 },\n                { opacity: 1, ease },\n            )\n        },\n        { title: '→Mark' },\n    )\n\n    useStep(\n        props.out,\n        (timeline, { duration, ease }) => {\n            timeline.to(ref.current!, duration.normal, { opacity: 0, ease })\n        },\n        { title: '→Mark' },\n    )\n\n    return (\n        <Marker ref={ref} style={{ top: `${(props.line - 1) * 1.5}em` }}>\n            {' '}\n        </Marker>\n    )\n}\n\nconst Marker = styled.mark`\n    position: absolute;\n    right: -2px;\n    left: -2px;\n    outline: 1px dotted yellow;\n    border-radius: 5px;\n    background: transparent;\n    pointer-events: none;\n`\n","import React, { FC } from 'react'\nimport { Title, Text } from '../themes/storm'\nimport { Fade } from '../components/Fade'\nimport { Code, Frag } from '../components/Code'\n\nexport const CssExample: FC = () => {\n    let c = 0\n    let i = 0\n    return (\n        <>\n            <Title>CSS</Title>\n            <Fade in={++c}>\n                <Text>And now some CSS</Text>\n            </Fade>\n            <Code\n                filename=\"styles/global.css\"\n                code={`\n                        $BODY\n                        .button {\n                            $BTN\n                            $HOVER\n                        }\n                    `}\n                in={++c}\n            >\n                <Frag\n                    id=\"BTN\"\n                    in={++i}\n                    code={`\n                        background: red;\n                    `}\n                    indent={1}\n                />\n                <Frag\n                    id=\"HOVER\"\n                    in={++i}\n                    code={`\n                        &:hover {\n                            background: #abc123;\n                        }\n                    `}\n                    indent={1}\n                />\n                <Frag\n                    id=\"BODY\"\n                    in={++i}\n                    code={`\n                        body {\n                            box-sizing: border-box;\n                            height: 100%;\n                            margin: 0;\n                            padding: 10px;\n                            $BODY2\n                        }\n                        \n                    `}\n                />\n                <Frag\n                    id=\"BODY2\"\n                    in={++i}\n                    indent={1}\n                    code={`\n                        line-height: 1.6;\n                        background-color: #923abc;\n                        color: aliceblue;\n                        font-family: 'Source Code Pro';\n                    `}\n                />\n            </Code>\n        </>\n    )\n}\n","import React, { FC } from 'react'\nimport { Code, Frag } from '../components/Code'\nimport { Title } from '../themes/storm'\n\nexport const FullExample: FC = () => {\n    let i = 0\n    return (\n        <>\n            <Title>Full example</Title>\n            <Code\n                filename=\"App.jsx\"\n                code={`\n                    <Deck>\n                        $SLIDE1\n                        $SLIDE2\n                    </Deck>\n                `}\n            >\n                <Frag\n                    in={++i}\n                    id=\"SLIDE1\"\n                    indent={1}\n                    code={`\n                        <Slide>\n                            $SLIDE1_CONTENT1\n                            $SLIDE1_CONTENT2\n                        </Slide>\n                    `}\n                />\n                <Frag\n                    in={++i}\n                    id=\"SLIDE1_CONTENT1\"\n                    indent={2}\n                    code={`\n                        <h1>Welcome!</h1>\n                    `}\n                />\n                <Frag\n                    in={++i}\n                    id=\"SLIDE1_CONTENT2\"\n                    indent={2}\n                    code={`\n                        <Fade in={1}>\n                            <p>Lorem ipsum dor…</p>\n                        </Fade>\n                    `}\n                />\n                <Frag\n                    in={++i}\n                    id=\"SLIDE2\"\n                    indent={1}\n                    code={`\n                        <Slide>\n                            $SLIDE2_CONTENT\n                        </Slide>\n                    `}\n                />\n                <Frag\n                    in={++i}\n                    id=\"SLIDE2_CONTENT\"\n                    indent={2}\n                    code={`\n                        <h1>Next slide!</h1>\n                        <Expand in={1}>\n                            <h2>hooray!</h2>\n                        </Expand>\n                        <p>It's so easy!</p>\n                    `}\n                />\n            </Code>\n        </>\n    )\n}\n","import React, { FC } from 'react'\nimport { Code } from '../components/Code'\nimport { Expand } from '../components/Expand'\nimport { Fade } from '../components/Fade'\nimport { SubTitle, Text, Title } from '../themes/storm'\n\nexport const HowToUse: FC = () => {\n    let f = 0\n    return (\n        <div>\n            <Title>How to use</Title>\n            <Expand in={++f} out={f + 1}>\n                <Text>To create slides you have to use two components:</Text>\n                <Code\n                    code={`\n                        <Deck>\n                            <Slide>Slide 1 content</Slide>\n                            <Slide>Slide 2 content</Slide>\n                            // …\n                        </Deck>\n                    `}\n                />\n            </Expand>\n            <Expand in={++f}>\n                <Text>Next, you may want to add some basic fancy components:</Text>\n            </Expand>\n            <Fade in={++f} out={f + 3}>\n                <SubTitle>Fade component</SubTitle>\n                <Code code={`<Fade in={1}>Content</Fade>`} />\n            </Fade>\n            <Expand in={++f} out={f + 2}>\n                <SubTitle>Expand component</SubTitle>\n                <Code code={`<Expand in={2}>Content</Expand>`} />\n            </Expand>\n            <Expand in={++f}>\n                <Text>You can also hide those components using out prop eg:</Text>\n                <Code code={`<Expand in={1} out={2}>Content</Expand>`} />\n            </Expand>\n        </div>\n    )\n}\n","import React, { FC } from 'react'\nimport { Title, Text } from '../themes/storm'\nimport { Fade } from '../components/Fade'\nimport { Code, Frag, Comment, Mark } from '../components/Code'\n\nexport const JavaScriptExample: FC = () => {\n    let c = 0\n    let i = 0\n\n    return (\n        <>\n            <Title>JavaScript</Title>\n            <Fade in={++c} out={100}>\n                <Text>Hello!</Text>\n                <Text>I will show you some code examples</Text>\n            </Fade>\n            <Code\n                filename=\"some.js\"\n                code={`\n                    $FULL_IF\n\n                    $COMMENT\n                    console.log($LOG);\n                    $END2\n\n                    $END\n                `}\n                in={++c}\n                out={100}\n            >\n                <Frag\n                    id=\"FULL_IF\"\n                    in={++i}\n                    code={`\n                        if ($IF2$IF) {\n                            $IN_IF\n                        }\n                    `}\n                />\n                <Frag id=\"IF\" in={++i} out={i + 1} code=\"!disabled || b === 5\" inline />\n                <Frag id=\"IF2\" in={++i} code=\"b === 1000\" inline />\n                <Frag\n                    id=\"IN_IF\"\n                    in={++i}\n                    indent={1}\n                    code={`\n                        if ($THEN) {\n                            $RETURN\n                        }\n                        \n                        return some.startWith('test');\n                    `}\n                />\n                <Frag id=\"THEN\" in={++i} code=\"!then\" inline />\n                <Frag id=\"RETURN\" in={++i} code=\"return null;\" indent={2} />\n                <Frag id=\"COMMENT\" in={++i} code={<Comment>Comment here</Comment>} />\n                <Frag id=\"END\" in={++i} out={++i} code=\"return true;\" />\n                <Frag id=\"END2\" in={i} code=\"return false;\" />\n                <Mark in={++i} out={i + 2} line={3} />\n                <Mark in={++i} out={i + 1} line={10} />\n                <Frag id=\"LOG\" in={++i} code=\"null >= 0\" inline />\n            </Code>\n        </>\n    )\n}\n","import React, { FC } from 'react'\nimport { Title } from '../themes/storm'\nimport { Code, Frag } from '../components/Code'\n\nexport const ReactExample: FC = () => (\n    <>\n        <Title>React</Title>\n        <Code\n            in={1}\n            filename=\"Input.tsx\"\n            code={`\n                $DIV_START $LABEL\n                $____<input$TYPE$ID />\n                $DIV_END\n            `}\n        >\n            <Frag id=\"TYPE\" in={1} code={` type=\"email\"`} inline />\n            <Frag id=\"DIV_START\" in={2} code={`<div className=\"wrapper\">`} />\n            <Frag id=\"____\" in={2} code={`    `} inline />\n            <Frag id=\"DIV_END\" in={2} code={`</div>`} />\n            <Frag\n                id=\"LABEL\"\n                in={3}\n                indent={1}\n                code={`\n                    <label$FOR>\n                        Email:\n                    </label>\n                `}\n            />\n            <Frag id=\"FOR\" in={4} code={` for=\"email\"`} inline />\n            <Frag id=\"ID\" in={4} code={` id=\"email\"`} inline />\n        </Code>\n    </>\n)\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n        ),\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href,\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA',\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister()\n        })\n    }\n}\n","import React from 'react'\nimport { render } from 'react-dom'\nimport { App } from './app/App'\nimport * as serviceWorker from './serviceWorker'\n\nrender(<App />, document.getElementById('app'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import React from 'react'\nimport { Deck } from '../components/Deck'\nimport { Slide } from '../components/Slide'\nimport {\n    backgroundColor,\n    backgroundImage,\n    Logo,\n    mainBackgroundImage,\n    Text,\n} from '../themes/storm'\nimport { ConsoleExample } from './ConsoleExample'\nimport { CssExample } from './CssExample'\nimport { FullExample } from './FullExample'\nimport { HowToUse } from './HowToUse'\nimport { JavaScriptExample } from './JavaScriptExample'\nimport { ReactExample } from './ReactExample'\n\nexport const App = () => (\n    <Deck config={{ backgroundImage, backgroundColor }}>\n        <Slide config={{ backgroundImage: mainBackgroundImage }}>\n            <Logo />\n            <Text align=\"center\">Click space or use arrow keys to navigate</Text>\n        </Slide>\n        <Slide>\n            <HowToUse />\n        </Slide>\n        <Slide config={{ backgroundColor, backgroundImage: \"''\" }}>\n            <FullExample />\n        </Slide>\n        <Slide>\n            <ConsoleExample />\n        </Slide>\n        <Slide>\n            <JavaScriptExample />\n        </Slide>\n        <Slide>\n            <ReactExample />\n        </Slide>\n        <Slide>\n            <CssExample />\n        </Slide>\n    </Deck>\n)\n"],"sourceRoot":""}